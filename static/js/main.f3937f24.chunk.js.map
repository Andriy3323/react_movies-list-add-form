{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","clearMovieForm","NewMovie","submitMovie","useState","newMovie","setNewMovie","isBtnDisabled","setIsBtnDisabled","isTitle","setIsTitle","isImgUrl","setIsImgUrl","isImdbUrl","setIsImdbUrl","isImdbId","setIsImdbId","handleOnBlur","event","target","value","name","useEffect","handleChange","onSubmit","preventDefault","currentTarget","reset","placeholder","onChange","onBlur","type","disabled","App","state","moviesFromServer","addMovie","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3937f24.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Movie } from '../../types/Movie';\nimport './NewMovie.scss';\n\ntype Props = {\n  submitMovie: (movie: Movie) => void,\n};\n\nconst clearMovieForm: Movie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = ({ submitMovie }) => {\n  const [newMovie, setNewMovie] = useState<Movie>(clearMovieForm);\n  const [isBtnDisabled, setIsBtnDisabled] = useState<boolean>(true);\n  const [isTitle, setIsTitle] = useState(false);\n  const [isImgUrl, setIsImgUrl] = useState(false);\n  const [isImdbUrl, setIsImdbUrl] = useState(false);\n  const [isImdbId, setIsImdbId] = useState(false);\n\n  const checkBtnDisable = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = newMovie;\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      setIsBtnDisabled(false);\n    } else {\n      setIsBtnDisabled(true);\n    }\n  };\n\n  const handleOnBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'title':\n        setIsTitle(!value);\n        break;\n\n      case 'imgUrl':\n        setIsImgUrl(!value);\n        break;\n\n      case 'imdbUrl':\n        setIsImdbUrl(!value);\n        break;\n\n      case 'imdbId':\n        setIsImdbId(!value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(checkBtnDisable);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setNewMovie({\n      ...newMovie,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.currentTarget.reset();\n\n    submitMovie(newMovie);\n    setNewMovie(clearMovieForm);\n    setIsBtnDisabled(true);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        name=\"title\"\n        placeholder=\"Title\"\n        className=\"input movieAdd__title\"\n        data-cy=\"form-title\"\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n      />\n\n      {isTitle && (\n        <div className=\"error-block\">\n          This field is required\n        </div>\n      )}\n\n      <input\n        name=\"description\"\n        placeholder=\"Description\"\n        className=\"input movieAdd__description\"\n        data-cy=\"form-description\"\n        onChange={handleChange}\n      />\n\n      <input\n        name=\"imgUrl\"\n        placeholder=\"ImgUrl\"\n        className=\"input movieAdd__imgUrl\"\n        data-cy=\"form-imgUrl\"\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n      />\n\n      {isImgUrl && (\n        <div className=\"error-block\">\n          This field is required\n        </div>\n      )}\n\n      <input\n        name=\"imdbUrl\"\n        placeholder=\"ImdbUrl\"\n        className=\"input movieAdd__imdbUrl\"\n        data-cy=\"form-imdbUrl\"\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n      />\n\n      {isImdbUrl && (\n        <div className=\"error-block\">\n          This field is required\n        </div>\n      )}\n\n      <input\n        name=\"imdbId\"\n        placeholder=\"ImdbId\"\n        className=\"input movieAdd__imdbId\"\n        data-cy=\"form-imdbId\"\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n      />\n\n      {isImdbId && (\n        <div className=\"error-block\">\n          This field is required\n        </div>\n      )}\n\n      <button\n        type=\"submit\"\n        className=\"button\"\n        disabled={isBtnDisabled}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            submitMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}